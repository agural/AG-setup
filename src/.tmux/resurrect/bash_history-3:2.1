vim test.out 
rm test.out 
python
ls
mkdir processing
cd processing/
cp ~/Projects/Contest_Programming/CF/790/x .
cp ~/Projects/Contest_Programming/CF/790/Z.cpp .
ls
cp Z.cpp check_data.cpp
vim check_data.cpp 
./x check_data
./a.out < ../data/BTC_ETH.csv 
vim check_data.cpp 
./x check_data
./a.out < ../data/BTC_ETH.csv 
./a.out < ../data/BTC_LTC.csv 
./a.out < ../data/BTC_ETH.csv 
vim check_data.cpp 
./x check_data
./a.out < ../data/BTC_ETH.csv 
./a.out < ../data/BTC_LTC.csv 
./a.out < ../data/BTC_ETH.csv 
exit
git status
rm test.npz 
rm test.b 
vim .git
vim .gitignore 
git status
git cam "Changed to binary files. Should allow for faster loading + smaller file size."
exit
python
exit
ls
la
rm .exit_ml.py.swp 
vim exit_ml.py
exit
git init .
.gitignore
vim .gitignore
git status
git cam "Copied file from previous Tensorflow project."
exit
vim exit_ml.py
ls
cd mnist/
ls
vim mnist.py 
cd ..
vim exit_ml.py
exit
python
exit
ls
python learn_when_moving_2.py 
python learn_when_moving_2.py exit
exit
cp learn_when_moving.py learn_when_moving_2.py 
vim learn_when_moving_2.py 
exit
ls
vim learn_when_moving.py 
tmux
exit
ssh -p 1247 tmpuser@192.30.35.185
ssh -p 1247 tmpuser@ssh.albertgural.com
ls
scp -p 1247 dark.xml tmpuser@ssh.albertgural.com:/home/tmpuser
scp -P 1247 dark.xml tmpuser@ssh.albertgural.com:/home/tmpuser
exit
albert
exit
vim .bashrc
exit
top
sudo swapoff -a
sudo fallocate -l 16G /swapfile16G
sudo mkswap /swapfile16G 
sudo swapon /swapfile16G
sudo swapoff /swapfile
sudo swapon -s
vim /etc/fstab
sudo vim /etc/fstab
sudo swapon -s
exit
top
top
exit
python
exit
vim mnist.py 
exit
top
cpuinfo 
cpu_perform 
cpuinfo 
python
exit
sudo apt-get install build-essential libssl-dev python-pip python-dev libffi-dev git
sudo bash -c 'apt-get update && apt-get upgrade'
pip install service_identity
pip install autobahn[twisted]
sudo apt-get install python-trollius
exit
wifi
exit
ls
cd Projects/Markets/Bitcoin/
ls
cd Poloniex_MM
ls
cd ../Poloniex_Algo/
ls
vim algo.py
cp algo.py ../Poloniex_Data/example.py
cd ../Poloniex_Data/
ls
vim example.py 
exit
top
exit
git status
git cam "Added kalman.py (test Kalman filter; abandoned for now). Added momentum.py (test Momentum trading - seems to actually be much strong mean reverting)."
exit
python
exit
vim algo.py 
exit
git status
git cam "Modifying bar code."
git cam "Bar-generating code is now very fast!"
git cam "Added moving averages."
ls
mkdir sandbox
ls
cd sandbox/
ls
rm *
ls
git status
cd ..
git status
vim .gitignore 
git status
git cam "Uh... market making seems OP..."
git status
git cam "Made changes to market making code to make it more realistic. Optimizing the spread parameter has a large effect on profit. Wrote code to try to learn optimal spread param. Accuracy is iffy."
git cam "New algorithm run_mm2 looks at past history to compute spread parameter. Works quite well."
git cam "Spread parameter optimization now takes into account the account size."
git status
git cam "Updated to more closely match the deployed algo."
git cam "Even better now (split equity in calculating optimal smin)."
git status
git cam "Tried adding linreg to make short term price movement estimates. Did not work well. Also, increasing fee to reflect slippage makes algo not work anymore."
git status
exit
cd Projects/Markets/Bitcoin/ML_exit/
ls
tmux
cd ..
ls
mkdir Poloniex_Algo
cd Poloniex_
cd Poloniex_Algo/
cp ../ML_exit/exit_ml.py .
mv exit_ml.py algo.py
ls
tmux
exit
python
python analysis.py 
exit
cp algo.py equity.py
vim equity
mv equity.py analysis.py
vim analysis.py 
exit
cd equity/
ls
vim XVC.csv 
ls
vim EXE.csv 
ls
vim ABY.csv 
vim VTC.csv 
ls
cd ..
ls
rm -r equity/
ls
rm -r equity/
cd equity/
vim TOTAL.csv 
cat TOTAL.csv 
exit
git status
git cam "Removed unnecessary components and refactored code."
git cam "Added Poloniex information."
git status
rm tests_wamp.py 
vim .gitignore
git status
git cam "Most code v0.1 written. Currently have init_setup() and init_algorithm() and associated functions debugged."
ls
vim log.info 
git status
git cam "Basic functionality seems to work. The critical loop is a bit slow, though. I'm going to move some API calls away from that section."
vim log.info 
git cam "Woops... found a pretty major error (wasn't updating the order numbers)."
git cam "Trying to run it again..."
git cam "DASH seems most profitable. Made minor changes to algo code. Also added diagnostics code to view the equity curve."
git cam "Improved debug output. Added slippage approximation to fee."
git status
vim log.info 
exit
ls
python
python tests_wamp.py 
python
python3 tests_wamp.py 
python
python algo.py
exit
vim algo.py 
ls
vim tests_wamp.py
vim algo.py
ls
cd ..
ls
cp -r Poloniex_MM/ Poloniex_MR
cd Poloniex_MR
ls
exit
vim algo.py
exit
git status
git cam "New algorithm seems to actually work! Saving progress before restarting with some better monitoring options."
rm -r equity/
cd eq
cd equity/
ls
vim MONITOR.csv 
git status
git cam "Better monitoring + better error handling in case of fault."
exit
python
exit
vim kalman.py 
ls
cp kalman.py momentum.py
vim momentum.py 
exit
git status
git cam "algo1 => mean reversion short time frame. algo2 => mean reversion long time frame."
git status
mv momentum.py mr_mom_test.py
ls
vim momentum.pyc 
rm momentum.pyc 
ls
git cam "Some more modifications to the mean reversion / momentum test script. Merged some ideas into the market making algorithm."
exit
cd Projects/Markets/Bitcoin/
cd Poloniex_Algo/
ls
cp ../Poloniex_Data/ .
cp ../Poloniex_Data/example.py .
ls
mv example.py kalman.py
tmux
exit
python
exit
python
exit
ls
cd data
ls
la
mv BTC_ETH.csv BTC_ETH.b
la
cd ..
ls
rm -r data_old/
ls
cd processing/
ls
cd ..
ls
la
exit
python
exit
vim ../Poloniex_Data/scrape.py
vim algo.py
exit
vim algo.py
ls
vim kalman.py
cd ../Poloniex_Data/
vim scrape.py
exit
ls
python
python hot_coin.py
exit
cd .vim/colors/
ls
vim solarized.vim
vim solarized.vim 
exit
vim .vimrc
mv .vimrc_old .vimrc
mv .bashrc_old .bashrc
exit
echo $TERM
mv .vimrc .vimrc_old
mv ~/Downloads/d41d8cd9.vimrc ~/.vimrc
vim
cat .vimrc
mv .bashrc .bashrc_old
mv Downloads/d41d8cd9.bashrc ~/.bashrc
exit
vim .vimrc
exit
cd Projects/Markets/Bitcoin/
ls
cd ML_exit/
ls
vim exit_ml.py
exit
vim INSTALL 
exit
./autogen.sh 
sudo add-apt-repository ppa:nilarimogard/webupd8
sudo apt-get install xournal
xournal
exit
vim README 
vim INSTALL 
tmux
exit
vim a3.m
exit
octave-clil
octave-cli
exit
vim a3.m 
exit
cd Stanford/Coursera/HINTON_NN/Assignment3/
ls
octave-cli
tmux
exit
python
exit
git cam "New negative cycle code using Bellman-Ford."
exit
git status
git cam "Slightly more advanced (using Bellman-Ford for neg cycles)."
exit
python
exit
vim jump_coin.py 
ls
vim mr_mom_test.py 
exit
cd Projects/Markets/Bitcoin/Poloniex_Algo/
ls
tmux
exit
python hot_coin.py
python jump_coin.py 
ls
exit
vim algo.py
ls
cp mr_mom_test.py hot_coin.py
vim hot_coin.py 
cp hot_coin.py jump_coin.py
vim jump_coin.py 
cp jump_coin.py adhoc.py
vim adhoc.py 
exit
ls
vim algo.py
git status
git cam "Created hot_coin to test whether, in a universe of coins, a CNN can decide the best (highest profit) coin in the next k-second window. First attempt has poor results."
git cam "Current solution achieves 0.33042 accuracy (baseline is 0.25)."
git cam "Added returns estimation and more markets. Doesn't look great..."
git cam "Saving current progress. Will try new idea soon - split up markets into their own separate data."
git cam "New idea (jump_coin) didn't work well. Let's try some ad hoc strategies again."
exit
cd Projects/Markets/Bitcoin/Poloniex_Algo/
ls
tmux
exit
ls
vim .gitignore
ls equity/
ls -la
cd equity/
la
cd ..
vim .gitignore
git status
git cam "Saving previous run results before trying modified algo."
git lg
git status
rm -r equity/
ls
python algo.py
rm -r equity/
python algo.py
rm -r equity/
python algo.py
rm -r equity/
python algo.py
exit
vim algo.py
exit
python analysis.py 
exit
vim analysis.py 
exit
ls
git init .
git status
git cam "Copying file from sandbox tests to be modified."
tmux
cd ../Poloniex_MR/
ls
tmux
cd ../Poloniex_MM
ls
tmux
exit
octave-cli
exit
ls
vim visible_state_to_hidden_probabilities.m 
exit
tmux
exit
cd rnn_examples/
ls
cd data/
ls
exit
cd ~/Stanford/Coursera/TensorFlow/
ls
cd models/tutorials/rnn/ptb/
ls
exit
top
cd Stanford/Coursera/ANG_ML/
ls
cd machine-learning-ex5
ls
evince ex5.pdf 
cd ../machine-learning-ex7
ls
cd ex7/
ls
cd ../../machine-learning-ex6
l
cd ex6/
ls
cd ../../machine-learning-ex4
ls
cd ex4/
ls
vim nnCostFunction.m 
exit
ls
vim ptb_word_lm.py 
exit
ls
cd Projects/Markets/Bitcoin/
ls
cd Poloniex_Algo/
ls
mkdir rnn
cd rnn/
tmux
cd ~/Stanford/Coursera/TensorFlow/models/tutorials/rnn/ptb/
tmux
exit
cd Stanford/
ls
cd Coursera/
ls
mkdir TensorFlow
cd TensorFlow/
git clone https://github.com/tensorflow/models
ls
cd models/
ls
cd tutorials/
ls
cd rnn/
ls
cd ptb/
ls
mv ~/Projects/Markets/Bitcoin/Poloniex_Algo/rnn/rnn_examples/ ~/Stanford/Coursera/TensorFlow/simple-examples
python ptb_word_lm.py --data_path=$HOME/Stanford/Coursera/TensorFlow/simple-examples/data/ --model=small
exit
cd ..
ls
vim mr_mom_test.py
exit
git status
git cam "Added RNN test suite."
exit
cd ..
ls
vim jump_coin.py 
cd ..
ls
cd Poloniex_Algo/
ls
vim hot_coin.py
vim adhoc.py 
cd sandbox/
ls
cd ..
vim algo.py
exit
top
exit
python
exit
python
exit
vim rnn.py
exit
git diff master..smart_threshold 
git branch -a
git diff master smart_threshold 
git checkout master
git branch -a
git checkout origin/master
git checkout smart_threshold 
git status
git cam "Maybe this is a dead end."
git status
git checkout master 
git branch single_threshold
git checkout single_threshold 
git diff single_threshold..smart_threshold 
exit
python
exit
stanford
exit
cd ../..
ls
cd Hacker
cd HackerRank/
ls
mkdir OpenBracket2017
cd OpenBracket2017/
ls
cp ~/Projects/Contest_Programming/CF/790/Z.cpp .
cp ~/Projects/Contest_Programming/CF/790/x .
ls
exit
cd ~/Projects/Contest_Programming/
ls
cd ACM
ls
cd ../Notebook/
ls
cd notebook-generator/src/2\ Data\ Structures/
ls
vim BIT.cpp 
vim Segment\ Tree.cpp 
git status
exit
ls
cp Z.cpp D_test.cpp
vim D_test.cpp 
./x D_test
./a.out > D2.in
vim D2.in
vim D_test.cpp 
./x D_test
./a.out > D2.in
vim D_test.cpp 
./x D_test
./a.out > D3.in
exit
cp Z.cpp A.cpp
vim A.cpp 
cp Z.cpp B.cpp
vim B.cpp 
cp Z.cpp C.cpp
vim C.cpp 
cp Z.cpp D.cpp
vim D.cpp 
exit
./x A
./a.out 
./x A
./a.out 
./x B
./a.out 
./x B
./a.out 
./x B
./a.out 
./x B
./a.out 
./x B
./a.out 
./x B
./a.out 
./x B
./a.out 
./x B
./a.out 
./x B
./a.out 
./x C
./a.out 
./x C
./a.out 
./x C
./a.out 
./x C
./a.out 
./x C
./a.out 
./x C
./a.out 
./x C
./a.out 
./x C
./a.out 
./x C
./a.out 
./x D
./a.out 
vim D_test.in
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
cp D.cpp D_30.cpp
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
vim C.cpp 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D_test.in 
./x D
./a.out < D2.in 
./x D
./a.out < D2.in 
./x D
./a.out < D2.in 
./x D
./a.out < D2.in 
./x D
./a.out < D2.in 
./x D
./a.out < D2.in 
./x D
./a.out < D2.in 
./x D
./a.out < D2.in 
./x D
./a.out < D2.in 
./x D
./a.out < D2.in 
./x D
./a.out < D2.in 
./x D
./a.out < D2.in 
./x D
./a.out < D2.in 
./x D
./a.out < D2.in 
./x D
./a.out < D2.in 
./x D
./a.out < D2.in 
./x D
./a.out < D2.in 
./x D
./a.out < D2.in 
./x D
./a.out < D2.in 
./x D
./a.out < D3.in 
time ./a.out < D2.in 
cp D.cpp D_faster.cpp
./x D
time ./a.out < D2.in 
time ./a.out < D_test.in 
./x D
time ./a.out < D_test.in 
./x D
time ./a.out < D_test.in 
./x D
time ./a.out < D_test.in 
time ./a.out < D2.in 
./x D
time ./a.out < D_test.in 
./x D
time ./a.out < D_test.in 
time ./a.out < D2.in 
./x D
time ./a.out < D2.in 
./x D
time ./a.out < D2.in 
cp D.cpp D_pass.cpp
./x D
time ./a.out < D2.in 
./x D
time ./a.out < D2.in 
exit
cd Projects/Contest_Programming/CF/790/
ls
tmux
cd ../../HackerRank/OpenBracket2017/
ls
tmux
exit
ls
vim logistic.m 
octave-cli
exit
vim visible_state_to_hidden_probabilities.m 
vim hidden_state_to_visible_probabilities.m 
vim configuration_goodness
vim configuration_goodness.m 
vim configuration_goodness_gradient.m 
vim cd1.m 
ls
cp cd1.m challenge.m
vim challenge.m 
vim challenge_inefficient.m
vim challenge_inefficient.m 
vim generate_all_binary_states.m
vim challenge
vim challenge.m 
exit
ls
exit
ls
vim sample_bernoulli.m 
exit
ls
vim visible_state_to_hidden_probabilities.m 
tmux
exit
ls
touch asdf
cp ~/Downloads/P3P_Firmware/Phantom_3_Professional_Firmware_v1.2.6_en/P3X_FW_V01.02.0006.bin .
mkdir 1.02.6
ls
mkdir 1.03.2
mkdir 1.04.1
mkdir 1.05.3
mkdir 1.06.4
mkdir 1.07.6
mkdir 1.08.8
mv Phantom_3_Professional_Firmware_v1.2.6_en 1.02.6/
mv Phantom_3_Professional_Firmware_v1.2.6_en.zip 1.02.6
ls
mv Phantom_3_Professional_Firmware_v1.3.20_en.zip 1.03.2/
mv Phantom_3_Professional_Firmware_v1.4.0010_en.zip 1.04.1/
ls
mv P3X_FW_V01.05.0030.zip 1.05.3/
mv P3X_FW_V01.06.0040.zip 1.06.4/
mv P3X_FW_V01.07.0060.zip 1.07.6/
mv P3X_FW_V01.08.0080.zip 1.08.8/
ls
exit
touch P3X_FW_DEBUG
exit
vim P3X_FW_LOG_AB.txt 
cp P3X_FW_LOG_AB.txt ~/Downloads/P3P_Firmware/Phantom_3_Professional_Firmware_v1.2.6_en/
exit
touch P3X_FW_DEBUG
exit
touch P3X_FW_DEBUG
exit
ls
cd data/
ls
ls -la
exit
ls -la
du ./data/
cd data/
ls
ls -la
cd ..
du ./data/
exit
stanford
exit
ssh stanford.us.to
vim .bashrc
stanford
ssh -X ken@stanford.us.to
exit
vim profiles.csv
exit
sudo apt-get install exfat-fuse exfat-utils
exit
touch P3X_FW_DEBUG
exit
la
exit
vim scrape.py
ls
vim rnn_example.py
ls
cp rnn_example.py rnn.py
vim rnn.py 
mkdir trash
mv rnn_example.py trash/
mv MNIST_data/ trash/
vim rnn.py 
cd Projects/Markets/Bitcoin/
ls
mkdir Poloniex_Data
cd Poloniex_Data/
pip install https://github.com/s4w3d0ff/python-poloniex/archive/v0.4.3.zip
ls
python
ls
tmux
ls
vim algo.py
rm .analysis.py.swp 
vim algo.py
rm .algo.py.swp 
vim algo.py
python
python
python scrape.py
;w
python scrape.py
cd Projects/Markets/Bitcoin/
ls
cd Poloniex_
cd Poloniex_Algo/
ls
cd rnn/
ls
tmux
ls
cd Projects/Markets/Bitcoin/
ls
cp -r Poloniex_MM/ Poloniex_Arb
cd Poloniex_A
cd Poloniex_Arb/
ls
rm -r equity/
rm log.info 
tmux
git cam "First implementation of RNN set up and seems to be functioning (but does it work as a strategy?)."
git cam "Getting somewhat reasonable results!"
git cam "Added ROC and another accuracy measure. Seeing slightly good results - ROC even looks reasonable."
git cam "Added code to predict returns when deploying this strategy. Returns actually look pretty promising."
git cam "Getting pretty good returns around 0.23 over half a month of test data."
git cam "Much better results (0.3) by norming the inputs properly and reducing to two output classes."
git cam "New high (0.4) by removing the hour, 4-hr, and daily signals."
git cam "New high (0.5) by increasing the threshold for what counts as a buy - short-term return of 2*FEE."
git cam "Got an amazingly high return by reducing the lookahead time to 3m then 1m... which revealed a lookahead bug, explaining the too-good-to-be-true returns from all of these past tests :(."
git cam "Fixed the previous bug and still getting positive returns, but much lower hit rate."
git cam "Starting to get semireasonable results again. Probably another bug..."
git cam "Pretty reasonable results by going back to the positive FEE model."
git cam "Added standard deviation (the correct way). Seems to really help."
git cam "Added p-finding with validation set."
git cam "Improved method of choosing p-value from validation set."
git cam "Pretty good results currently, using 300k minutes."
git checkout -b smart_threshold
git lg
git cam "Really good results by including previous y-values."
git lg
git lg2
git lg
git cam "There was a lookahead bug in the previous implementation. Hopefully fixed now. Returns still decent."
git cam "Fixed color scheme for blue-red scatter."
python
cd equity/
ls
vim TOTAL.csv 
cd ..
ls
python analysis.py 
rm equity/TOTAL.csv 
python analysis.py 
vim equity/TOTAL.csv 
python analysis.py 
python
vim equity/TOTAL.csv 
python analysis.py 
vim equity/TOTAL.csv 
python analysis.py 
python
vim rnn.py
exit
murmann
exit
python CartPole-A3C.py 
cd ..
ls
git clone https://github.com/openai/gym
cd gym/
ls
pip install -e
pip install -e .
cd ../AI-blog/
python CartPole-A3C.py 
conda install -c conda-forge keras
python CartPole-A3C.py 
exit
vim CartPole-A3C.py 
cp CartPole-A3C.py A3C.py
ls
ls ..
mv A3C.py ..
cd ..
ls
mkdir Poloniex_A3C
mv A3C.py Poloniex_A3C/
cd Poloniex_A3C/
ls
exit
python A3C.py 
python
python A3C.py 
